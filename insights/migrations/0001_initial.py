# Generated by Django 4.2.23 on 2025-08-31 20:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0014_alter_product_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('code', models.SlugField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('emoji', models.CharField(default='üèÖ', max_length=8)),
                ('description', models.CharField(max_length=200)),
                ('rule', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ForecastRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('algo', models.CharField(default='ema_weekday', max_length=30)),
                ('horizon_days', models.PositiveSmallIntegerField(default=14)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaderboardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('scope', models.CharField(choices=[('week', 'week'), ('month', 'month')], max_length=12)),
                ('metric', models.CharField(choices=[('units', 'units'), ('revenue', 'revenue'), ('profit', 'profit')], max_length=12)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['scope', 'metric'], name='insights_le_scope_37cdcf_idx'), models.Index(fields=['-created_at'], name='insights_le_created_36422b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ForecastItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('date', models.DateField()),
                ('yhat', models.FloatField()),
                ('ylo', models.FloatField(blank=True, null=True)),
                ('yhi', models.FloatField(blank=True, null=True)),
                ('mape', models.FloatField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='insights.forecastrun')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('predicted_units', models.IntegerField()),
                ('predicted_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='EmailReportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_key', models.CharField(max_length=40)),
                ('sent_to', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meta', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_key'], name='insights_em_report__c3c9f3_idx'), models.Index(fields=['-created_at'], name='insights_em_created_3b3027_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('d', models.DateField()),
                ('units', models.FloatField(default=0)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('profit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
            ],
        ),
        migrations.CreateModel(
            name='AgentBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insights.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-awarded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReorderAdvice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reorder_point', models.FloatField()),
                ('recommend_qty', models.FloatField()),
                ('reason', models.CharField(default='cover_lead_time_plus_buffer', max_length=120)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
            ],
            options={
                'indexes': [models.Index(fields=['store_id', 'product'], name='insights_re_store_i_66fcba_idx'), models.Index(fields=['created_at'], name='insights_re_created_f9e4a7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('low_stock', 'Low Stock'), ('nudge', 'Nudge'), ('report', 'Report')], max_length=40)),
                ('title', models.CharField(max_length=140)),
                ('body', models.TextField()),
                ('severity', models.CharField(choices=[('info', 'info'), ('warn', 'warn'), ('crit', 'crit')], default='info', max_length=10)),
                ('meta', models.JSONField(blank=True, default=dict)),
                ('sent_via', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='insights_no_user_id_c14146_idx'), models.Index(fields=['kind'], name='insights_no_kind_0130c7_idx'), models.Index(fields=['severity'], name='insights_no_severit_1dfcd3_idx')],
            },
        ),
        migrations.CreateModel(
            name='InventoryPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('lead_time_days', models.FloatField(default=7)),
                ('service_level_z', models.FloatField(default=1.28)),
                ('safety_factor', models.FloatField(default=1.0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
            ],
            options={
                'indexes': [models.Index(fields=['store_id', 'product'], name='insights_in_store_i_7961a4_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='inventorypolicy',
            constraint=models.UniqueConstraint(fields=('store_id', 'product'), name='uniq_invpolicy_storeid_product'),
        ),
        migrations.AddIndex(
            model_name='forecastitem',
            index=models.Index(fields=['store_id', 'product'], name='insights_fo_store_i_d91687_idx'),
        ),
        migrations.AddIndex(
            model_name='forecastitem',
            index=models.Index(fields=['date'], name='insights_fo_date_51582b_idx'),
        ),
        migrations.AddConstraint(
            model_name='forecastitem',
            constraint=models.UniqueConstraint(fields=('run', 'store_id', 'product', 'date'), name='uniq_forecastitem_run_scope_day'),
        ),
        migrations.AddIndex(
            model_name='forecast',
            index=models.Index(fields=['product', 'date'], name='insights_fo_product_30a551_idx'),
        ),
        migrations.AddConstraint(
            model_name='forecast',
            constraint=models.UniqueConstraint(fields=('product', 'date'), name='uniq_forecast_product_date'),
        ),
        migrations.AddIndex(
            model_name='dailykpi',
            index=models.Index(fields=['store_id', 'product'], name='insights_da_store_i_547df3_idx'),
        ),
        migrations.AddIndex(
            model_name='dailykpi',
            index=models.Index(fields=['d'], name='insights_da_d_969b0e_idx'),
        ),
        migrations.AddConstraint(
            model_name='dailykpi',
            constraint=models.UniqueConstraint(fields=('store_id', 'product', 'd'), name='uniq_dkpi_storeid_product_day'),
        ),
        migrations.AddIndex(
            model_name='agentbadge',
            index=models.Index(fields=['user', '-awarded_at'], name='insights_ag_user_id_4cdc1b_idx'),
        ),
        migrations.AddConstraint(
            model_name='agentbadge',
            constraint=models.UniqueConstraint(fields=('user', 'badge'), name='uniq_user_badge_once'),
        ),
    ]
